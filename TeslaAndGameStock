Webscraping and extracting data to DataFrames, creating basic chart which helps analysing Tesla and GameStop historical Revenue.
!pip install yfinance==0.1.67
!mamba install bs4==4.10.0 -y
!pip install nbformat==4.2.0

import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots

import warnings
# Ignore all warnings
warnings.filterwarnings("ignore", category=FutureWarning)

def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    stock_data_specific = stock_data[stock_data.Date <= '2021--06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()

Tesla = yf.Ticker('TSLA')
tesla_data = Tesla.history(period='max')
tesla_data = tesla_data.rename(columns={'eDate': 'Date'})
tesla_data.reset_index(inplace=True)
tesla_data.head()

url_tesla = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm'
hmtl_tesla = requests.get(url_tesla)
html_code_tesla = BeautifulSoup(hmtl_tesla.text, 'html')

table = html_code_tesla.find_all('tbody')[0]
head_titles = ['Date', 'Revenue'] 
tesla_revenue = pd.DataFrame(columns = head_titles)
column_data = table.find_all('tr')
for row in  column_data:
    row_data = row.find_all("td")
    individual_row_data = [data.text for data in row_data]
    lenght = len(tesla_revenue)
    tesla_revenue.loc[lenght] = individual_row_data 
        
tesla_revenue

tesla_revenue["Revenue"] = tesla_revenue['Revenue'].str.replace(',|\$',"")
tesla_revenue.dropna(inplace=True)
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]
tesla_revenue['Date'] = pd.to_datetime(tesla_revenue['Date'], format='%Y')

print(tesla_revenue)

tesla_revenue.tail()


game = yf.Ticker('GME')
game_data = game.history(period='max')
game_data = game_data.rename(columns={'eDate': 'Date'})
game_data.reset_index(inplace=True)

game_data

url_game = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html'

hmtl_game= requests.get(url_game)
html_code_game = BeautifulSoup(hmtl_game.text, 'html')

table_game = html_code_game.find_all('tbody')[0]
head_titles_game = ['Date', 'Revenue'] 
game_revenue = pd.DataFrame(columns = head_titles_game)
column_data_game = table_game.find_all('tr')
for row in  column_data_game:
    row_data_game = row.find_all("td")
    individual_row_data_game = [data.text for data in row_data_game]
    lenght = len(game_revenue)
    game_revenue.loc[lenght] = individual_row_data_game
        
game_revenue

game_revenue.tail()
game_revenue.dropna(inplace=True)
game_revenue["Revenue"] = game_revenue['Revenue'].str.replace(',|\$',"")
game_revenue = game_revenue[game_revenue['Revenue'] != ""]
game_revenue['Date'] = pd.to_datetime(game_revenue['Date'], format='%Y')

print(game_revenue)

make_graph(tesla_data, tesla_revenue, 'Tesla')

make_graph(game_data, game_revenue, 'GameStop')
